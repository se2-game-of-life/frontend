plugins {
    alias(libs.plugins.androidApplication)
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

android {
    namespace 'se2.group3.gameoflife.frontend'
    compileSdk 34

    defaultConfig {
        applicationId "se2.group3.gameoflife.frontend"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            finalizedBy jacocoTestReport
        }
    }
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn 'testDebugUnitTest'

    reports {
        xml.required = true
        xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${project.layout.buildDirectory.get().asFile}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = files("${project.layout.buildDirectory.get().asFile}/jacoco/testDebugUnitTest.exec")
}

sonar {
    properties {
        property "sonar.projectKey", "se2-game-of-life_frontend"
        property "sonar.organization", "se2-game-of-life"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        property "sonar.coverage.exclusions", "src/main/java/se2/group3/gameoflife/frontend/activities/**,src/main/java/se2/group3/gameoflife/frontend/dto/**,src/main/java/se2/group3/gameoflife/frontend/networking/**,src/main/java/se2/group3/gameoflife/frontend/dto/**,src/main/java/se2/group3/gameoflife/frontend/fragments/**"
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.okhttp
    implementation libs.stomp.protocol.android
    implementation libs.rxjava
    implementation libs.rxandroid
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.jackson.databind
    testImplementation libs.junit
    testImplementation libs.junit.jupiter
    testImplementation libs.mockito.core
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    testRuntimeOnly libs.junit.vintage.engine
    implementation libs.jackson.databind
}